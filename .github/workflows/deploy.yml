name: Deploy Backend

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Prepare and clean server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/wooster/backend

            # Create backup directory
            mkdir -p backup

            # Stop the server
            pm2 stop backend || true

            # Backup current version
            if [ -d "dist" ]; then
              timestamp=$(date +%Y%m%d_%H%M%S)
              tar -czf backup/backup_${timestamp}.tar.gz dist src || true
            fi

            # Clean the deployment directory
            sudo rm -rf dist build src package.json package-lock.json tsconfig.json .eslintrc.* README.md

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: '.,!node_modules,!.git,!.github,!backup,!test,!.env,!.env.*'
          target: '/home/wooster/backend'
          strip_components: 0

      - name: Post-deploy setup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/wooster/backend

            # Install production dependencies
            npm ci --production

            # Ensure correct permissions
            chmod +x dist/index.js

            # Start/restart the application
            pm2 describe backend > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart backend --update-env
            else
              pm2 start dist/index.js --name backend
            fi

            # Save PM2 config
            pm2 save

            # Clean old backups (keep last 5)
            cd backup && ls -t | tail -n +6 | xargs -r rm --
